{"version":3,"sources":["components/Navbar/NavbarElements.js","components/Navbar/index.js","components/Sidebar/SidebarElements.js","components/Sidebar/index.js","pages/index.js","App.js","index.js"],"names":["Nav","styled","nav","NavContainer","div","NavWrapper","NavLogo","ScrollLink","MobileMenu","NavMenu","NavItems","NavLink","NavBtn","a","Navbar","toggleMenu","useState","navbar","setNavbar","navbarRevealed","setNavbarRevealed","lastScroll","changeNavbar","window","scrollY","currentScroll","pageYOffset","console","log","useEffect","addEventListener","className","to","onClick","smooth","duration","SidebarContainer","isOpen","SidebarWrapper","CloseIcon","SidebarItems","SidebarLink","SidebarBtn","Sidebar","Home","setIsOpen","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4PAGaA,EAAMC,IAAOC,IAAV,iUAkBHC,EAAeF,IAAOG,IAAV,oKAUZC,EAAaJ,IAAOG,IAAV,uNAWVE,EAAUL,YAAOM,OAAPN,CAAH,+ZAcPO,EAAaP,IAAOG,IAAV,2LAWVK,EAAUR,IAAOG,IAAV,uKAUPM,EAAWT,IAAOG,IAAV,kDAKRO,EAAUV,YAAOM,OAAPN,CAAH,0KAWPW,EAASX,IAAOY,EAAV,sP,eC5BJC,EApDA,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,WAEb,EAA4BC,oBAAS,GAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAA4CF,oBAAS,GAArD,mBAAOG,EAAP,KAAuBC,EAAvB,KAGIC,EAAa,EACXC,EAAe,WAEdC,OAAOC,SAAW,GACjBN,GAAU,GAEVA,GAAU,GAId,IAAMO,EAAgBF,OAAOG,YACzBD,EAAgBJ,IAChBD,GAAkB,GAClBO,QAAQC,IAAI,OAEZH,EAAgBJ,GAChBD,GAAkB,GAEtBC,EAAaI,GAQjB,OAJAI,qBAAU,WACNN,OAAOO,iBAAiB,SAAUR,KACnC,IAGC,cAACtB,EAAD,CAAK+B,UAAWZ,EAAiB,YAAc,cAA/C,SACI,cAAChB,EAAD,CAAc4B,UAAWd,EAAS,SAAW,GAA7C,SACI,eAACZ,EAAD,WACI,cAACC,EAAD,CAAS0B,GAAG,OAAZ,wBACA,cAACxB,EAAD,CAAYyB,QAASlB,EAArB,SAAiC,cAAC,IAAD,MACjC,eAACN,EAAD,WACI,eAACC,EAAD,WACI,cAACC,EAAD,CAASqB,GAAG,OAAOE,QAAQ,EAAMC,SAAU,IAA3C,kBACA,cAACxB,EAAD,CAASqB,GAAG,QAAQE,QAAQ,EAAMC,SAAU,IAA5C,mBACA,cAACxB,EAAD,CAASqB,GAAG,WAAWE,QAAQ,EAAMC,SAAU,IAA/C,yBAEJ,cAACvB,EAAD,iC,QCtDXwB,EAAmBnC,IAAOC,IAAV,uXAOd,qBAAEmC,OAAsB,IAAM,WAK1B,qBAAEA,OAAsB,OAAS,OAC1B,qBAAEA,OAAsB,MAAQ,UAK7CC,EAAiBrC,IAAOG,IAAV,iLASdmC,EAAYtC,IAAOG,IAAV,8KAUToC,EAAevC,IAAOG,IAAV,gJAQZqC,EAAcxC,YAAOM,OAAPN,CAAH,0QAeXyC,EAAazC,IAAOY,EAAV,kTCjCR8B,EApBC,SAAC,GAA0B,IAAzBN,EAAwB,EAAxBA,OAAQtB,EAAgB,EAAhBA,WACtB,OACI,mCACI,cAACqB,EAAD,CAAkBC,OAAQA,EAAQJ,QAASlB,EAA3C,SACI,eAACuB,EAAD,WACI,cAACC,EAAD,CAAWN,QAASlB,EAApB,SACI,cAAC,IAAD,MAEJ,eAACyB,EAAD,WACI,cAACC,EAAD,CAAaR,QAASlB,EAAYiB,GAAG,OAAOE,QAAQ,EAAMC,SAAU,IAApE,kBACA,cAACM,EAAD,CAAaR,QAASlB,EAAYiB,GAAG,QAAQE,QAAQ,EAAMC,SAAU,IAArE,mBACA,cAACM,EAAD,CAAaR,QAASlB,EAAYiB,GAAG,WAAWE,QAAQ,EAAMC,SAAU,IAAxE,yBAEJ,cAACO,EAAD,8BCILE,EAnBF,WAET,MAA4B5B,oBAAS,GAArC,mBAAOqB,EAAP,KAAeQ,EAAf,KAEM9B,EAAa,WACf8B,GAAWR,IAEf,OACI,qCACI,cAAC,EAAD,CAAQtB,WAAYA,IACpB,cAAC,EAAD,CAASsB,OAAQA,EAAQtB,WAAYA,QCTlC+B,MANf,WACE,OACE,cAAC,EAAD,KCDJC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.e74f1132.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\nimport { Link as ScrollLink } from \"react-scroll\";\r\n\r\nexport const Nav = styled.nav`\r\n    width: 100%;\r\n    height: 70px;\r\n    background: transparent;\r\n    z-index: 999;\r\n    position: fixed;\r\n    top: 0;\r\n    transition: all 400ms ease-in-out;\r\n\r\n    &.scroll-down {\r\n        transform: translateY(-70px);\r\n    }\r\n\r\n    &.scroll-up {\r\n        transform: translateY(0);\r\n    }\r\n`;\r\n\r\nexport const NavContainer = styled.div`\r\n    transition: all 400ms ease-in-out;\r\n    width: 100%;\r\n    height: 100%;\r\n    \r\n    &.active {\r\n        background: #0f0f0f;\r\n    }\r\n`;\r\n\r\nexport const NavWrapper = styled.div`\r\n    margin: 0 auto;\r\n    height: 100%;\r\n    width: 100%;\r\n    max-width: 1100px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    padding: 0 10px;\r\n`;\r\n\r\nexport const NavLogo = styled(ScrollLink)`\r\n    background-image: linear-gradient(to right, #f195ac, #00a8ff);\r\n    background-clip: text;\r\n    -webkit-background-clip: text;\r\n    -webkit-text-fill-color: transparent;\r\n    -moz-background-clip: text;\r\n    -moz-text-fill-color: transparent;\r\n    cursor: pointer;\r\n    font-size: 2.2rem;\r\n    font-weight: 900;\r\n    text-transform: uppercase;\r\n    font-family: 'Teko', sans-serif;\r\n`;\r\n\r\nexport const MobileMenu = styled.div`\r\n    color: #fff;\r\n    cursor: pointer;\r\n    font-size: 2rem;\r\n    display: none;\r\n\r\n    @media screen and (max-width: 820px) {\r\n        display: flex;\r\n    }\r\n`;\r\n\r\nexport const NavMenu = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 25px;\r\n\r\n    @media screen and (max-width: 820px) {\r\n        display: none;\r\n    }\r\n`;\r\n\r\nexport const NavItems = styled.div`\r\n    display: flex;\r\n\r\n`;\r\n\r\nexport const NavLink = styled(ScrollLink)`\r\n    color: #fff;\r\n    cursor: pointer;\r\n    padding: 0 2.5rem;\r\n    transition: all 0.3s ease;\r\n\r\n    &:hover {\r\n        color: #ccc;\r\n    }\r\n`;\r\n\r\nexport const NavBtn = styled.a`\r\n    color: #000;\r\n    padding: 0.5rem 2rem;\r\n    transition: all 0.3s ease-in-out;\r\n    background: #00a8ff;\r\n    border-radius: 10px;\r\n    text-decoration: none;\r\n\r\n    &:hover {\r\n        background: #6dceff;\r\n    }\r\n`;","import React, { useState, useEffect } from \"react\";\r\nimport  { Nav,\r\n          NavContainer,\r\n          NavWrapper,\r\n          NavLogo,\r\n          MobileMenu,\r\n          NavMenu,\r\n          NavItems,\r\n          NavLink,\r\n          NavBtn\r\n        } from \"./NavbarElements\";\r\nimport { FaBars } from \"react-icons/fa\";\r\n\r\nconst Navbar = ({toggleMenu}) => {\r\n    //States\r\n    const [navbar, setNavbar] = useState(false);\r\n    const [navbarRevealed, setNavbarRevealed] = useState(true);\r\n\r\n    //Functions\r\n    let lastScroll = 0;\r\n    const changeNavbar = () => {\r\n        //Navbar change background\r\n        if(window.scrollY >= 70) {\r\n            setNavbar(true);\r\n        } else {\r\n            setNavbar(false);\r\n        }\r\n\r\n        //Navbar Reveal on scroll\r\n        const currentScroll = window.pageYOffset;\r\n        if (currentScroll < lastScroll) {\r\n            setNavbarRevealed(true)\r\n            console.log(\"up\");\r\n        }\r\n        if (currentScroll > lastScroll) {\r\n            setNavbarRevealed(false);\r\n        }\r\n        lastScroll = currentScroll;\r\n    }\r\n\r\n    //Event Listener\r\n    useEffect(() => {\r\n        window.addEventListener(\"scroll\", changeNavbar);\r\n    }, []);\r\n\r\n    return (\r\n        <Nav className={navbarRevealed ? \"scroll-up\" : \"scroll-down\"} >\r\n            <NavContainer className={navbar ? \"active\" : \"\"} >\r\n                <NavWrapper>\r\n                    <NavLogo to='home' >Daily Dope</NavLogo>\r\n                    <MobileMenu onClick={toggleMenu}><FaBars /></MobileMenu>\r\n                    <NavMenu>\r\n                        <NavItems>\r\n                            <NavLink to=\"home\" smooth={true} duration={600} >Home</NavLink>\r\n                            <NavLink to=\"about\" smooth={true} duration={600} >About</NavLink>\r\n                            <NavLink to=\"products\" smooth={true} duration={600} >Products</NavLink>\r\n                        </NavItems>\r\n                        <NavBtn>Sign In</NavBtn>\r\n                    </NavMenu>\r\n                </NavWrapper>\r\n            </NavContainer>\r\n        </Nav>\r\n    )\r\n}\r\n\r\nexport default Navbar;","import styled from \"styled-components\";\r\nimport { Link as ScrollLink } from \"react-scroll\";\r\n\r\nexport const SidebarContainer = styled.nav`\r\n    display: none;\r\n    height: 100%;\r\n\r\n    @media screen and (max-width: 820px) {\r\n        display: flex;\r\n        position: fixed;\r\n        top: ${({isOpen}) => (isOpen ? \"0\" : \"-100%\")};\r\n        right: 0;\r\n        left: 0;\r\n        background: #0d0d0d;\r\n        transition: all 0.2s ease-in-out;\r\n        opacity: ${({isOpen}) => (isOpen ? \"100%\" : \"0\")};\r\n        pointer-events: ${({isOpen}) => (isOpen ? \"all\" : \"none\")};\r\n        z-index: 999;\r\n    }\r\n`;\r\n\r\nexport const SidebarWrapper = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n`;\r\n\r\nexport const CloseIcon = styled.div`\r\n    color: #fff;\r\n    font-size: 2.8rem;\r\n    font-weight: bolder;\r\n    position: fixed;\r\n    top: 15px;\r\n    right: 10px;\r\n    cursor: pointer;\r\n`;\r\n\r\nexport const SidebarItems = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    width: 100%;\r\n    margin-top: 80px;\r\n`;\r\n\r\nexport const SidebarLink = styled(ScrollLink)`\r\n    text-decoration: none;\r\n    color: #fff;\r\n    text-align: center;\r\n    font-size: 1.6rem;\r\n    cursor: pointer;\r\n    transition: all 0.3s ease;\r\n    width: 100%;\r\n    padding: 0.8rem;\r\n\r\n    &:hover {\r\n        color: #f195ac;\r\n    }\r\n`;\r\n\r\nexport const SidebarBtn = styled.a`\r\n    text-decoration: none;\r\n    color: #000;\r\n    background: #00a8ff;\r\n    cursor: pointer;\r\n    padding: 0.5rem 2rem;\r\n    transition: all 0.3s ease;\r\n    border-radius: 50px;\r\n    margin: 40px 0;\r\n    font-size: 1.3rem;\r\n\r\n    &:hover {\r\n        background: #f195ac;\r\n    }\r\n`;","import React from \"react\";\r\nimport { MdClose } from \"react-icons/md\";\r\nimport {SidebarContainer,\r\n        SidebarWrapper,\r\n        CloseIcon,\r\n        SidebarItems,\r\n        SidebarLink,\r\n        SidebarBtn\r\n        } from \"./SidebarElements\";\r\n\r\nconst Sidebar = ({isOpen, toggleMenu}) => {\r\n    return (\r\n        <>\r\n            <SidebarContainer isOpen={isOpen} onClick={toggleMenu}>\r\n                <SidebarWrapper>\r\n                    <CloseIcon onClick={toggleMenu}>\r\n                        <MdClose />\r\n                    </CloseIcon>\r\n                    <SidebarItems>\r\n                        <SidebarLink onClick={toggleMenu} to=\"home\" smooth={true} duration={600} >Home</SidebarLink>\r\n                        <SidebarLink onClick={toggleMenu} to=\"about\" smooth={true} duration={600} >About</SidebarLink>\r\n                        <SidebarLink onClick={toggleMenu} to=\"products\" smooth={true} duration={600} >Products</SidebarLink>\r\n                    </SidebarItems>\r\n                    <SidebarBtn>Sign In</SidebarBtn>\r\n                </SidebarWrapper>\r\n            </SidebarContainer>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Sidebar;","import React, { useState } from \"react\";\r\nimport Navbar from \"../components/Navbar\";\r\nimport Sidebar from \"../components/Sidebar\";\r\n// import HeroSection from \"../components/HeroSection\";\r\n// import About from \"../components/AboutSection\";\r\n// import Products from \"../components/ProductsSection\";\r\n// import Footer from \"../components/Footer\";\r\n\r\nconst Home = () => {\r\n    //States & Functions\r\n    const [isOpen, setIsOpen] = useState(false);\r\n\r\n    const toggleMenu = () => {\r\n        setIsOpen(!isOpen);\r\n    }\r\n    return (\r\n        <>\r\n            <Navbar toggleMenu={toggleMenu} />\r\n            <Sidebar isOpen={isOpen} toggleMenu={toggleMenu} />\r\n            {/* <HeroSection />\r\n            <About />\r\n            <Products />\r\n            <Footer /> */}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Home;","import './App.css';\nimport Home from \"./pages\";\n\nfunction App() {\n  return (\n    <Home />\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}